/*
 * Praktikum:           P1P 
 * Semester:            WS09
 * Team-Name:           S3T4
 * Namen:               Dolberg, Konstantin     #1959949
 *                      Eisenbraun, Alexander   #1965085
 * Aufgaben-Nr.:        A07
 * Kontrolleur:     
 * Datum der Abnahme:   01.12.2009
 * Quellen:             URL: https://pub.informatik.haw-hamburg.de/home/pub/prof/schafers/S09W_P1/Aufgabenzettel_Nr3_v05.pdf
 */
package a07;

import java.util.Arrays;

public class Cube extends Field {
    Point[]  p;
    Point    xyz                  = new Point(0, 0, 0);
    double   result               = 0;
    double   result2              = 0;
    double   resultXsumme         = 0;
    double   resultYsumme         = 0;
    double   resultZsumme         = 0;
    double[] results              = new double[8];
    int      counterGleicheKanten = 0;

    public Cube(Point[] p) {
        this.p = p;
    }

    public double checkCube() {

        for (int j = 1; j < p.length; j++) {

            result = Math.sqrt((Math.pow((p[0].getX() - p[j].getX()), 2))
                    + (Math.pow((p[0].getY() - p[j].getY()), 2) + (Math.pow(
                            (p[0].getZ() - p[j].getZ()), 2))));
            results[j] = result;
        }

        for (int i = 0; i < results.length - 1; i++) {
            for (int j = i + 1; j < results.length; j++) {
                if (results[i] < results[j]) {
                    result2 = results[j];
                    results[j] = results[i];
                    results[i] = result2;
                }
            }
        }
        for (int j = 0; j < results.length; j++) {
            if (results[6] == results[j]) {
                counterGleicheKanten++;
            }
        }
        return results[6];
    }

    public Point getCenter() {
        for (int i = 0; i < p.length; i++) {
            resultXsumme += p[i].getX();
            resultYsumme += p[i].getY();
            resultZsumme += p[i].getZ();
        }
        xyz.setX(resultXsumme / 8);
        xyz.setY(resultYsumme / 8);
        xyz.setZ(resultZsumme / 8);
        return xyz;
    }

    public double getSurface() {
        return 6 * Math.pow(results[6], 2);
    }

    public double getVolume() {
        return Math.pow(results[6], 3);
    }

    public String toString() {
        checkCube();
        return counterGleicheKanten == 3 ? String
                .format(
                        "Cube [p=%s, \ncheckCube()=%s, getCenter()=%s, getSurface()=%s, getVolume()=%s]",
                        Arrays.toString(p), checkCube(), getCenter(),
                        getSurface(), getVolume())
                : "Kein Würfel";
    }

    // public String toString() {
    // System.out.println("Cube Points");
    //	
    // Arrays.toString(p);
    // checkCube();
    // return counterGleicheKanten == 3 ? String.format("Volumen Cube: "
    // + getVolume() + "\nOberfläche Cube: " + getSurface()
    // + "\nCenter: " + getCenter().toString()) : String
    // .format("Kein Würfel");
    // }

}